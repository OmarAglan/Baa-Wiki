name: Sync Documentation from Main Repo

on:
  schedule:
    # Runs every day at 2 AM UTC
    - cron: '0 2 * * *'
  
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if no changes'
        required: false
        default: 'false'
      source_branch:
        description: 'Source branch in main repo (default: main)'
        required: false
        default: 'main'
  
  repository_dispatch:
    types: [docs-updated]

# Sets permissions for the job
permissions:
  contents: write
  pull-requests: write

jobs:
  sync-docs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout baa-wiki
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SYNC_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Configure git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Get current branch
        id: current-branch
        run: |
          echo "current_branch=$(git branch --show-current)" >> $GITHUB_OUTPUT
          echo "Current branch: ${{ steps.current-branch.outputs.current_branch }}"

      - name: Clean old docs
        run: |
          if [ -d "docs" ]; then
            rm -rf docs/
            echo "✅ Old docs removed"
          else
            echo "ℹ️ No existing docs folder found"
          fi

      - name: Clone main Baa repository
        id: clone-repo
        run: |
          SOURCE_BRANCH="${{ github.event.inputs.source_branch || 'main' }}"
          echo "Cloning from branch: $SOURCE_BRANCH"
          
          git clone --depth 1 --single-branch --branch "$SOURCE_BRANCH" \
            https://x-access-token:${{ secrets.SYNC_TOKEN }}@github.com/${{ github.repository_owner }}/Baa.git \
            temp-baa
          
          if [ ! -d "temp-baa" ]; then
            echo "❌ Failed to clone repository"
            exit 1
          fi
          
          echo "✅ Repository cloned successfully"

      - name: Check for docs folder
        run: |
          if [ -d "temp-baa/docs" ]; then
            echo "✅ Docs folder found in main repo"
            ls -la temp-baa/docs/
          else
            echo "❌ No docs folder found in main repo"
            echo "Available folders:"
            ls -la temp-baa/
            exit 1
          fi

      - name: Copy documentation
        run: |
          cp -r temp-baa/docs ./docs
          echo "✅ Documentation copied from main repo"
          
          # Show what was copied
          echo "📁 Copied files:"
          find docs/ -type f | head -20

      - name: Get last commit info from main repo
        id: main-repo-info
        run: |
          cd temp-baa
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          commit_message="$(git log -1 --pretty=%B)"
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "$commit_message" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "commit_author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "commit_date=$(git log -1 --pretty=%cd)" >> $GITHUB_OUTPUT
          cd ..
          
          echo "📝 Last commit info:"
          echo "  SHA: ${{ steps.main-repo-info.outputs.commit_sha }}"
          echo "  Author: ${{ steps.main-repo-info.outputs.commit_author }}"
          echo "  Date: ${{ steps.main-repo-info.outputs.commit_date }}"

      - name: Process Arabic documentation
        run: |
          if [ -f "scripts/process-docs.js" ]; then
            echo "🔄 Processing documentation..."
            node scripts/process-docs.js
            echo "✅ Documentation processed"
          else
            echo "ℹ️ No processing script found, skipping"
          fi

      - name: Check for changes
        id: check-changes
        run: |
          git add docs/
          if git diff --staged --quiet && [ "${{ github.event.inputs.force_sync }}" != "true" ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "📝 No changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected"
            
            # Show what changed
            echo "📋 Changes summary:"
            git diff --staged --name-only | head -10
          fi

      - name: Commit changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          COMMIT_MSG="📚 Sync docs from main repo

          Source: Baa@${{ steps.main-repo-info.outputs.commit_sha }}
          Branch: ${{ github.event.inputs.source_branch || 'main' }}
          Original: ${{ steps.main-repo-info.outputs.commit_message }}
          Author: ${{ steps.main-repo-info.outputs.commit_author }}
          Date: ${{ steps.main-repo-info.outputs.commit_date }}
          
          [skip ci]"
          
          git commit -m "$COMMIT_MSG"
          echo "✅ Changes committed"

      - name: Push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          CURRENT_BRANCH="${{ steps.current-branch.outputs.current_branch }}"
          echo "Pushing to branch: $CURRENT_BRANCH"
          
          git push origin "$CURRENT_BRANCH"
          echo "✅ Changes pushed to baa-wiki"

      - name: Clean up
        if: always()
        run: |
          rm -rf temp-baa
          echo "✅ Cleanup completed"

      - name: Trigger deployment
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "🚀 Triggering deployment..."
          curl -X POST \
            -H "Authorization: token ${{ secrets.SYNC_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"deploy-wiki"}'
          echo "✅ Deployment triggered"

      - name: Success summary
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "🎉 Sync completed successfully!"
          echo "📝 Changes committed and pushed"
          echo "🚀 Deployment triggered"
          echo "📅 Sync completed at: $(date)"

      - name: No changes summary
        if: steps.check-changes.outputs.has_changes == 'false'
        run: |
          echo "ℹ️ No changes detected"
          echo "📅 Sync completed at: $(date)"
          echo "✅ Documentation is up to date"
