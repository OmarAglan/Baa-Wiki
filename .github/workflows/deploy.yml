name: Deploy Documentation

on:
  push:
    branches: [main, master]
    paths-ignore:
      - '.github/workflows/sync-docs.yml'
      - 'README.md'
      - 'IMPROVEMENTS.md'
  
  pull_request:
    branches: [main, master]
    paths-ignore:
      - '.github/workflows/sync-docs.yml'
      - 'README.md'
      - 'IMPROVEMENTS.md'
  
  workflow_dispatch:
  
  repository_dispatch:
    types: [deploy-wiki]

# Sets permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # For lastUpdated feature

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          echo "✅ Dependencies installed successfully"

      - name: Check VitePress configuration
        run: |
          npx vitepress --version
          echo "✅ VitePress version checked"

      - name: Build VitePress site
        run: |
          npm run build
          echo "✅ Site built successfully"
          
          # Check if dist folder exists and has content
          if [ ! -d ".vitepress/dist" ]; then
            echo "❌ Build failed: .vitepress/dist not found"
            exit 1
          fi
          
          if [ ! "$(ls -A .vitepress/dist)" ]; then
            echo "❌ Build failed: .vitepress/dist is empty"
            exit 1
          fi
          
          echo "📁 Build output size: $(du -sh .vitepress/dist | cut -f1)"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Success message
        run: |
          echo "✅ Documentation deployed successfully!"
          echo "🌐 Visit: ${{ steps.deployment.outputs.page_url }}"
          echo "📅 Deployed at: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"

  preview:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview deployed successfully!**
              
              📍 **Preview URL**: ${{ steps.deployment.outputs.page_url }}
              
              This preview will be available until the PR is closed or merged.
              
              ---
              *Deployed by GitHub Actions*`
            })
