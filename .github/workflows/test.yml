name: Test and Validate

on:
  push:
    branches: [main, master]
    paths-ignore:
      - '.github/workflows/sync-docs.yml'
      - 'README.md'
      - 'IMPROVEMENTS.md'
  
  pull_request:
    branches: [main, master]
    paths-ignore:
      - '.github/workflows/sync-docs.yml'
      - 'README.md'
      - 'IMPROVEMENTS.md'
  
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Check Node.js version
        run: |
          node --version
          npm --version
          echo "‚úÖ Node.js environment ready"

      - name: Validate package.json
        run: |
          if [ ! -f "package.json" ]; then
            echo "‚ùå package.json not found"
            exit 1
          fi
          
          # Check if vitepress is in dependencies
          if ! npm list vitepress > /dev/null 2>&1; then
            echo "‚ùå VitePress not found in dependencies"
            exit 1
          fi
          
          echo "‚úÖ package.json is valid"

      - name: Install dependencies
        run: |
          npm ci
          echo "‚úÖ Dependencies installed successfully"

      - name: Check VitePress configuration
        run: |
          if [ ! -f ".vitepress/config.js" ]; then
            echo "‚ùå VitePress config not found"
            exit 1
          fi
          
          npx vitepress --version
          echo "‚úÖ VitePress configuration is valid"

      - name: Validate documentation structure
        run: |
          if [ ! -d "docs" ]; then
            echo "‚ùå docs directory not found"
            exit 1
          fi
          
          if [ ! -f "index.md" ]; then
            echo "‚ùå index.md not found"
            exit 1
          fi
          
          echo "‚úÖ Documentation structure is valid"
          
          # Count markdown files
          MD_COUNT=$(find . -name "*.md" | wc -l)
          echo "üìÑ Found $MD_COUNT markdown files"

      - name: Test build process
        run: |
          echo "üî® Testing build process..."
          npm run build
          
          if [ ! -d ".vitepress/dist" ]; then
            echo "‚ùå Build failed: .vitepress/dist not found"
            exit 1
          fi
          
          if [ ! "$(ls -A .vitepress/dist)" ]; then
            echo "‚ùå Build failed: .vitepress/dist is empty"
            exit 1
          fi
          
          BUILD_SIZE=$(du -sh .vitepress/dist | cut -f1)
          echo "‚úÖ Build successful! Size: $BUILD_SIZE"

      - name: Check for broken links
        run: |
          echo "üîó Checking for broken links..."
          
          # Find all markdown files
          find . -name "*.md" -exec grep -l "\[.*\](" {} \; | while read file; do
            echo "Checking links in: $file"
            # Extract links and check if they're valid
            grep -o '\[.*\]([^)]*)' "$file" | sed 's/.*(\([^)]*\)).*/\1/' | while read link; do
              if [[ $link == http* ]]; then
                echo "  External link: $link"
              elif [[ $link == \#* ]]; then
                echo "  Anchor link: $link"
              else
                echo "  Internal link: $link"
                # Check if file exists
                if [[ $link == /* ]]; then
                  link=".$link"
                fi
                if [ ! -f "$link" ] && [ ! -f "${link}.md" ]; then
                  echo "    ‚ö†Ô∏è  Warning: Link may be broken: $link"
                fi
              fi
            done
          done
          
          echo "‚úÖ Link validation completed"

      - name: Validate components
        run: |
          echo "üß© Validating custom components..."
          
          if [ -d ".vitepress/theme/components" ]; then
            echo "‚úÖ Components directory found"
            ls -la .vitepress/theme/components/
          else
            echo "‚ÑπÔ∏è No custom components found"
          fi

      - name: Check for syntax errors
        run: |
          echo "üîç Checking for syntax errors..."
          
          # Check JavaScript files
          find . -name "*.js" -not -path "./node_modules/*" -not -path "./.git/*" | while read file; do
            echo "Checking: $file"
            node -c "$file" || echo "  ‚ùå Syntax error in $file"
          done
          
          # Check Vue files (basic check)
          find . -name "*.vue" -not -path "./node_modules/*" -not -path "./.git/*" | while read file; do
            echo "Checking Vue file: $file"
            if ! grep -q "<template>" "$file" && ! grep -q "<script>" "$file"; then
              echo "  ‚ö†Ô∏è  Warning: $file may not be a valid Vue component"
            fi
          done
          
          echo "‚úÖ Syntax validation completed"

      - name: Performance check
        run: |
          echo "‚ö° Performance check..."
          
          # Check build size
          BUILD_SIZE=$(du -sh .vitepress/dist | cut -f1)
          echo "Build size: $BUILD_SIZE"
          
          # Check number of files
          FILE_COUNT=$(find .vitepress/dist -type f | wc -l)
          echo "Number of files: $FILE_COUNT"
          
          # Check for large files
          find .vitepress/dist -type f -size +1M | while read file; do
            echo "‚ö†Ô∏è  Large file detected: $file ($(du -h "$file" | cut -f1))"
          done
          
          echo "‚úÖ Performance check completed"

      - name: Success summary
        run: |
          echo "üéâ All validations passed!"
          echo "‚úÖ Build process is working correctly"
          echo "‚úÖ Documentation structure is valid"
          echo "‚úÖ No critical issues found"
          echo "üìÖ Validation completed at: $(date)"